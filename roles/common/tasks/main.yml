---
# tasks file for common role
# Responsável pelo hardening base do servidor Debian/Ubuntu.

# --------------------------------------------------------------------------
# ETAPA 1: ATUALIZAÇÃO DO SISTEMA E PACOTES ESSENCIAIS
# --------------------------------------------------------------------------
- name: "Atualizar cache de pacotes (APT)"
  ansible.builtin.apt:
    update_cache: yes
    cache_valid_time: 3600
  tags: [packages]

- name: "Realizar upgrade completo do sistema para a última versão"
  ansible.builtin.apt:
    upgrade: dist
    autoremove: yes
  tags: [packages]

- name: "Verificar se um reinício é necessário após a atualização do sistema"
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file
  tags: [packages]

- name: "Reiniciar o servidor (se necessário), aguardar reconexão e esperar 2 minutos"
  ansible.builtin.reboot:
    msg: "Reiniciando o servidor devido a uma atualização crítica (ex: kernel). Aguardando 2 minutos para continuar."
    reboot_timeout: 300
    post_reboot_delay: 120
  when: reboot_required_file.stat.exists
  tags: [packages]

- name: "Instalar pacotes de segurança e utilitários essenciais"
  ansible.builtin.apt:
    name:
      # Segurança
      - ufw
      - fail2ban
      - unattended-upgrades
      - auditd
      - apt-listchanges
      # Utilitários
      - htop
      - curl
      - wget
      - git
      - vim
      - rsync
      - ca-certificates
      - gnupg
    state: present
  tags: [packages]

- name: "Remover pacotes desnecessários para reduzir a superfície de ataque"
  ansible.builtin.apt:
    name:
      - popularity-contest
      - telnetd
      - rsh-server
      - avahi-daemon
    state: absent
    purge: yes
  tags: [packages, security]

# --------------------------------------------------------------------------
# ETAPA 2: CRIAÇÃO E CONFIGURAÇÃO DE USUÁRIO
# --------------------------------------------------------------------------
- name: "Garantir que o usuário '{{ deploy_user }}' existe e pertence ao grupo 'sudo'"
  ansible.builtin.user:
    name: "{{ deploy_user }}"
    shell: /bin/bash
    groups: sudo
    append: yes
  tags: [user]

- name: "Conceder a '{{ deploy_user }}' acesso sudo sem senha"
  ansible.builtin.lineinfile:
    path: "/etc/sudoers.d/{{ deploy_user }}"
    line: "{{ deploy_user }} ALL=(ALL) NOPASSWD: ALL"
    create: yes
    validate: 'visudo -cf %s'
    mode: '0440'
  tags: [user, sudo]

# --------------------------------------------------------------------------
# ETAPA 3: CONFIGURAÇÃO DE SWAP (MEMÓRIA VIRTUAL)
# --------------------------------------------------------------------------
- name: "Configurar e ativar um arquivo de swap"
  community.general.swap_file:
    name: "{{ swap_file_path }}"
    size: "{{ swap_size_mb }}M"
  tags: [system, swap]

# --------------------------------------------------------------------------
# ETAPA 4: REFORÇO DE SEGURANÇA DO KERNEL E SISTEMA
# --------------------------------------------------------------------------
- name: "Aplicar configurações de segurança ao Kernel via sysctl"
  ansible.builtin.sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  loop:
    - { name: 'net.ipv4.conf.all.rp_filter', value: '1' }
    - { name: 'net.ipv4.conf.default.rp_filter', value: '1' }
    - { name: 'net.ipv4.icmp_echo_ignore_broadcasts', value: '1' }
    - { name: 'net.ipv4.conf.all.accept_redirects', value: '0' }
    - { name: 'net.ipv4.conf.default.accept_redirects', value: '0' }
    - { name: 'net.ipv4.conf.all.secure_redirects', value: '0' }
    - { name: 'net.ipv4.conf.default.secure_redirects', value: '0' }
    - { name: 'net.ipv4.conf.all.accept_source_route', value: '0' }
    - { name: 'net.ipv4.conf.default.accept_source_route', value: '0' }
    - { name: 'net.ipv4.tcp_syncookies', value: '1' }
    - { name: 'kernel.dmesg_restrict', value: '1' }
    - { name: 'kernel.kptr_restrict', value: '2' }
    - { name: 'kernel.yama.ptrace_scope', value: '1' }
  tags: [system, kernel, security]

# --------------------------------------------------------------------------
# ETAPA 5: REFORÇO DE SEGURANÇA DO SSH
# --------------------------------------------------------------------------
- name: "Criar banner de aviso para o login SSH"
  ansible.builtin.copy:
    dest: /etc/issue.net
    content: |
      ******************************************************************
      *                     ACESSO AUTORIZADO APENAS                   *
      *                                                                *
      *      Este sistema é monitorado. Todas as atividades são        *
      *      registradas e podem ser usadas como evidência.            *
      ******************************************************************
    mode: '0644'
  tags: [ssh, security]

- name: "Aplicar configurações de segurança ao SSH"
  ansible.builtin.lineinfile:
    path: /etc/ssh/sshd_config
    regexp: "^#?{{ item.key }}"
    line: "{{ item.key }} {{ item.value }}"
    state: present
  loop:
    - { key: 'PermitRootLogin', value: 'no' }
    - { key: 'PasswordAuthentication', value: 'yes' } # Mantém login por senha
    - { key: 'PermitEmptyPasswords', value: 'no' }
    - { key: 'ChallengeResponseAuthentication', value: 'no' }
    - { key: 'X11Forwarding', value: 'no' }
    - { key: 'MaxAuthTries', value: '3' }
    - { key: 'LoginGraceTime', value: '60' }
    - { key: 'AllowUsers', value: '{{ deploy_user }}' }
    - { key: 'Banner', value: '/etc/issue.net' }
    # Garante que o subsistema SFTP padrão esteja ativo
    - { key: 'Subsystem', value: 'sftp /usr/lib/openssh/sftp-server' }
  notify: Reiniciar SSH
  tags: [ssh, security]

# --------------------------------------------------------------------------
# ETAPA 6: CONFIGURAÇÃO DO FIREWALL (UFW)
# --------------------------------------------------------------------------
- name: "Resetar configurações do UFW para um estado limpo"
  community.general.ufw:
    state: reset
  tags: [firewall, ufw]

- name: "Definir políticas padrão do UFW (negar entrada, permitir saída)"
  community.general.ufw:
    direction: "{{ item.direction }}"
    policy: "{{ item.policy }}"
  loop:
    - { direction: 'incoming', policy: 'deny' }
    - { direction: 'outgoing', policy: 'allow' }
  tags: [firewall, ufw]

- name: "Permitir conexões SSH (essencial para não perder o acesso)"
  community.general.ufw:
    rule: allow
    name: OpenSSH
  tags: [firewall, ufw]

- name: "Permitir tráfego HTTP na porta 80"
  community.general.ufw:
    rule: allow
    port: '80'
    proto: tcp
  tags: [firewall, ufw]

- name: "Permitir tráfego HTTPS na porta 443"
  community.general.ufw:
    rule: allow
    port: '443'
    proto: tcp
  tags: [firewall, ufw]

- name: "Ativar o firewall UFW com logging"
  community.general.ufw:
    state: enabled
    logging: 'on'
  tags: [firewall, ufw]

# --------------------------------------------------------------------------
# ETAPA 7: PROTEÇÃO CONTRA FORÇA BRUTA (FAIL2BAN)
# --------------------------------------------------------------------------
- name: "Configurar Fail2Ban para proteger o SSH"
  ansible.builtin.copy:
    dest: /etc/fail2ban/jail.local
    content: |
      [DEFAULT]
      bantime  = 1h
      findtime = 10m
      maxretry = 5
      backend  = systemd

      [sshd]
      enabled = true
    mode: '0644'
  notify: Reiniciar Fail2Ban
  tags: [fail2ban, security] 